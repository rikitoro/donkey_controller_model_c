;===================================================================================================
;===============================================================================
; アドレス関連定義
;===============================================================================
;===========================================================
; メモリ
;===========================================================
RAM_TOP                 .EQU    0400H           ; RAMの先頭アドレス
RAM_END                 .EQU    33FFH           ; RAMの終了アドレス
DATAROM_TOP             .EQU    0F000H          ; データ用ROMの先頭アドレス
DATAROM_END             .EQU    0FFFFH          ; データ用ROMの終了アドレス
ROM_TOP                 .EQU    0F0000H         ; ROMの先頭アドレス
ROM_END                 .EQU    0FFFFFH         ; ROMの終了アドレス

;===========================================================
; ベクタテーブル
;===========================================================
VARIABLE_VECTOR_TOP     .EQU    0FFE00H         ; 可変ベクタテーブル先頭アドレス
FIXED_VECTOR_TOP        .EQU    0FFFDCH         ; 固定ベクタテーブル先頭アドレス

;===========================================================
; SB/FB
;===========================================================
SB_BASE                 .EQU    0400H           ; スタティックベースアドレス
FB_BASE                 .EQU    0400H           ; フレームベースアドレス

;===========================================================
; ヒープ／スタック
;===========================================================
HEAPSIZE                .EQU    0100H           ; ヒープ領域のサイズ
STACKSIZE               .EQU    0100H           ; スタック領域のサイズ

;===========================================================
; IDコード
;===========================================================
IDCODE_0                .EQU    0FFH            ; FFDF番地のIDコード
IDCODE_1                .EQU    0FFH            ; FFE3番地のIDコード
IDCODE_2                .EQU    0FFH            ; FFEB番地のIDコード
IDCODE_3                .EQU    0FFH            ; FFEF番地のIDコード
IDCODE_4                .EQU    0FFH            ; FFF3番地のIDコード
IDCODE_5                .EQU    0FFH            ; FFF7番地のIDコード
IDCODE_6                .EQU    0FFH            ; FFFB番地のIDコード

;===========================================================
; ROMプロテクトコード
;===========================================================
ROM_PROTECT             .EQU    0FFH            ; FFFF番地のROMコードプロテクト




;===============================================================================
; マクロ定義
;===============================================================================
;===========================================================
; 初期化
;===========================================================
CLEAR   .MACRO          Top, Size, Value
        MOV.B           #Value, R0L                     ; クリアする値を代入
        MOV.W           #(Top & 0FFFFH), A1             ; クリアするアドレス先頭番地を代入
        MOV.W           #Size, R3                       ; クリアサイズを代入
        SSTR.B                                          ; クリア実行
        .ENDM

;===========================================================
; コピー
;===========================================================
COPY    .MACRO          From, _To, Size
        MOV.W           #(From & 0FFFFH) , A0           ; コピー元アドレス先頭番地  0-15bit を代入代入
        MOV.B           #(From >> 16), R1H              ; コピー元アドレス先頭番地 16-20bit を代入
        MOV.W           #_To, A1                                ; コピー先アドレス先頭番地を代入
        MOV.W           #sizeof Size, R3                ; コピーサイズを代入
        SMOVF.B                                         ; コピー実行

        .ENDM

;===============================================================================
; ヒープ領域
; ※アセンブル実行時に、-D_HEAP=1 を定義する事で使用可能です。
;===============================================================================
        .SECTION        heap, DATA
        .ORG            RAM_TOP
.IF _HEAP==1
; ヒープエリアを使用する場合は、領域を確保します。
HEAP_TOP:
        .BLKB           HEAPSIZE
.ELSE
; ヒープエリアを使用しない場合は、領域を確保しません。
HEAP_TOP:
.ENDIF




;===============================================================================
; 変数領域 NEAR
;===============================================================================
;===========================================================
; 初期値を持つ静的変数領域　SBDATA領域　偶数
;===========================================================
        .SECTION        data_SE, DATA
data_SE_TOP:

;===========================================================
; 初期値を持つ変数領域　SBDATA領域　奇数
;===========================================================
        .SECTION        data_SO, DATA
data_SO_TOP:

;===========================================================
; 初期値を持たない静的変数領域　SBDATA領域　偶数
;===========================================================
        .SECTION        bss_SE, DATA
bss_SE_TOP:

;===========================================================
; 初期値を持たない変数領域　SBDATA領域　奇数
;===========================================================
        .SECTION        bss_SO, DATA
bss_SO_TOP:

;===========================================================
; 初期値を持つ静的変数領域　NEAR領域　偶数
;===========================================================
        .SECTION        data_NE, DATA
data_NE_TOP:

;===========================================================
; 初期値を持つ変数領域　NEAR領域　奇数
;===========================================================
        .SECTION        data_NO, DATA
data_NO_TOP:

;===========================================================
; 初期値を持たない静的変数領域　NEAR領域　偶数
;===========================================================
        .SECTION        bss_NE, DATA
bss_NE_TOP:

;===========================================================
; 初期値を持たない変数領域　NEAR領域　奇数
;===========================================================
        .SECTION        bss_NO, DATA
bss_NO_TOP:




;===============================================================================
; 変数領域 FAR
;===============================================================================
;===========================================================
; 初期値を持つ静的変数領域　FAR領域　偶数
;===========================================================
        .SECTION        data_FE, DATA
data_FE_TOP:

;===========================================================
; 初期値を持つ変数領域　FAR領域　奇数
;===========================================================
        .SECTION        data_FO, DATA
data_FO_TOP:

;===========================================================
; 初期値を持たない静的変数領域　FAR領域　偶数
;===========================================================
        .SECTION        bss_FE, DATA
bss_FE_TOP:

;===========================================================
; 初期値を持たない変数領域　FAR領域　奇数
;===========================================================
        .SECTION        bss_FO, DATA
bss_FO_TOP:




;===============================================================================
; スタック領域
; ※アセンブル実行時に、-D_STACK=1 を定義する事で専用領域を確保します。
; 　ISP の使用を前提としていますので、USP を使用したい場合は各自で定義して下さい。
;===============================================================================
.IF _STACK==1
; スタック専用領域を確保します。
        .SECTION        stack, DATA
        .ORG            (RAM_END + 1 - STACKSIZE)
        .BLKB           STACKSIZE
STACK_TOP:
.ELSE
; RAM全体をスタックとして使用します。
STACK_TOP       .EQU    (RAM_END + 1)
.ENDIF




;===============================================================================
; コード領域
;===============================================================================
        .SECTION        program, CODE
        .ORG            ROM_TOP
;===========================================================
; 初期化
;===========================================================
RESET:

        
        ;===== レジスタセットの初期化 =====
        LDC             #0, FLG                         ; フラグレジスタのクリア
        LDC             #STACK_TOP, ISP                 ; スタックポインタの設定
        LDC             #SB_BASE, SB                    ; SBの設定
        LDC             #FB_BASE, FB                    ; FBの設定
        LDINTB          #VARIABLE_VECTOR_TOP            ; 可変ベクタアドレスポイント設定

        
        ;===== RAMクリア(H'00) =====
        CLEAR           RAM_TOP, (RAM_END + 1 - RAM_TOP), 0
        
        ;===== 静的変数初期値をコピー =====
        COPY            data_SEI_TOP, data_SE_TOP, data_SE 
        COPY            data_SOI_TOP, data_SO_TOP, data_SO
        COPY            data_NEI_TOP, data_NE_TOP, data_NE
        COPY            data_NOI_TOP, data_NO_TOP, data_NO
        COPY            data_FEI_TOP, data_FE_TOP, data_FE
        COPY            data_FOI_TOP, data_FO_TOP, data_FO 

        ;===== ヒープ領域初期化 =====
.IF _HEAP==1
        .GLB            __mbase
        .GLB            __mnext
        .GLB            __msize
        MOV.W           #(HEAP_TOP & 0FFFFH), __mbase
        MOV.W           #(HEAP_TOP & 0FFFFH), __mnext
        MOV.W           #(HEAPSIZE & 0FFFFH), __msize
.ENDIF

;===========================================================
; パワーオンリセット関数呼び出し
;===========================================================
        .GLB            _main
        JSR.A           _main

;===========================================================
; 無限ループ
;===========================================================
LOOP:
        JMP             LOOP

;===========================================================
; ダミー割り込み処理
;===========================================================
DUMMY:
        REIT                                            ; 割り込み処理からの復帰




;===============================================================================
; 定数領域 NEAR
;===============================================================================
;===========================================================
; 変数の初期値領域　SBDATA領域　偶数
;===========================================================
        .SECTION        data_SEI, ROMDATA
data_SEI_TOP:

;===========================================================
; 変数の初期値領域　SBDATA領域　奇数
;===========================================================
        .SECTION        data_SOI, ROMDATA
data_SOI_TOP:

;===========================================================
; 変数の初期値領域　NEAR領域　偶数
;===========================================================
        .SECTION        data_NEI, ROMDATA
data_NEI_TOP:

;===========================================================
; 変数の初期値領域　NEAR領域　奇数
;===========================================================
        .SECTION        data_NOI, ROMDATA
data_NOI_TOP:

;===========================================================
; 定数領域　NEAR領域　偶数
;===========================================================
        .SECTION        rom_NE, ROMDATA
rom_NE_TOP:

;===========================================================
; 定数領域　NEAR領域　奇数
;===========================================================
        .SECTION        rom_NO, ROMDATA
rom_NO_TOP:




;===============================================================================
; 定数領域 FAR
;===============================================================================
;===========================================================
; 変数の初期値領域　NEAR領域　偶数
;===========================================================
        .SECTION        data_FEI, ROMDATA
data_FEI_TOP:

;===========================================================
; 変数の初期値領域　NEAR領域　奇数
;===========================================================
        .SECTION        data_FOI, ROMDATA
data_FOI_TOP:

;===========================================================
; 定数領域　NEAR領域　偶数
;===========================================================
        .SECTION        rom_FE, ROMDATA
rom_FE_TOP:

;===========================================================
; 定数領域　NEAR領域　奇数
;===========================================================
        .SECTION        rom_FO, ROMDATA
rom_FO_TOP:



;===============================================================================
; 可変ベクタ領域
;===============================================================================
        .SECTION        VARIABLE_VECTOR, ROMDATA
        .ORG            VARIABLE_VECTOR_TOP
        .LWORD          DUMMY                           ; 0             ; BRK命令
        .LWORD          DUMMY                           ; 1             ; CAN0ウエイクアップ
        .LWORD          DUMMY                           ; 2             ; CAN0受信完了
        .LWORD          DUMMY                           ; 3             ; CAN0送信完了
		.GLB			_int_int3
        .LWORD          _int_int3                       ; 4             ; INT3
        .LWORD          DUMMY                           ; 5             ; IC/OC割り込み0
        .LWORD          DUMMY                           ; 6             ; IC/OC割り込み1,I2Cbusインターフェース
        .LWORD          DUMMY                           ; 7             ; IC/OCベースタイマ、SCL/SDA
        .LWORD          DUMMY                           ; 8             ; SI/O4,INT5
		.GLB			_int_int4
        .LWORD          _int_int4                      ; 9             ; SI/O3,INT4
        .LWORD          DUMMY                           ; 10            ; UART2バス衝突検出
        .LWORD          DUMMY                           ; 11            ; DMA0
        .LWORD          DUMMY                           ; 12            ; DMA1
        .LWORD          DUMMY                           ; 13            ; CAN0エラー
		.LWORD			DUMMY		; 14            ; A/D,キー入力割り込み
        .LWORD          DUMMY                           ; 15            ; UART2送信,NACK2
        .LWORD          DUMMY                           ; 16            ; UART2受信,ACK2
        .LWORD          DUMMY                           ; 17            ; UART0送信
        .LWORD          DUMMY                           ; 18            ; UART0受信
        .LWORD          DUMMY                           ; 19            ; UART1送信
        .LWORD          DUMMY                           ; 20            ; UART1受信
        .LWORD          DUMMY                           ; 21            ; タイマA0
        .LWORD          DUMMY                           ; 22            ; タイマA1
		.LWORD			DUMMY								; 23            ; タイマA2
        .LWORD          DUMMY                           ; 24            ; タイマA3
        .LWORD          DUMMY                           ; 25            ; タイマA4
        .LWORD          DUMMY                       ; 26            ; タイマB0
		.GLB			_int_tb1
		.LWORD			_int_tb1							; 27		; タイマB1
		.GLB			_int_tb2
        .LWORD          _int_tb2                           ; 28            ; タイマB2
        .LWORD          DUMMY                           ; 29            ; INT0
		.GLB			_int_int1
        .LWORD          _int_int1                  ; 30            ; INT1
		.GLB			_int_int2
        .LWORD          _int_int2                       ; 31            ; INT2
        .LWORD          DUMMY                           ; 32            ; ソフトウェア
        .LWORD          DUMMY                           ; 33            ; ソフトウェア
        .LWORD          DUMMY                           ; 34            ; ソフトウェア
        .LWORD          DUMMY                           ; 35            ; ソフトウェア
        .LWORD          DUMMY                           ; 36            ; ソフトウェア
        .LWORD          DUMMY                           ; 37            ; ソフトウェア
        .LWORD          DUMMY                           ; 38            ; ソフトウェア
        .LWORD          DUMMY                           ; 39            ; ソフトウェア
        .LWORD          DUMMY                           ; 40            ; ソフトウェア
        .LWORD          DUMMY                           ; 41            ; ソフトウェア
        .LWORD          DUMMY                           ; 42            ; ソフトウェア
        .LWORD          DUMMY                           ; 43            ; ソフトウェア
        .LWORD          DUMMY                           ; 44            ; ソフトウェア
        .LWORD          DUMMY                           ; 45            ; ソフトウェア
        .LWORD          DUMMY                           ; 46            ; ソフトウェア
        .LWORD          DUMMY                           ; 47            ; ソフトウェア
        .LWORD          DUMMY                           ; 48            ; ソフトウェア
        .LWORD          DUMMY                           ; 49            ; ソフトウェア
        .LWORD          DUMMY                           ; 50            ; ソフトウェア
        .LWORD          DUMMY                           ; 51            ; ソフトウェア
        .LWORD          DUMMY                           ; 52            ; ソフトウェア
        .LWORD          DUMMY                           ; 53            ; ソフトウェア
        .LWORD          DUMMY                           ; 54            ; ソフトウェア
        .LWORD          DUMMY                           ; 55            ; ソフトウェア
        .LWORD          DUMMY                           ; 56            ; ソフトウェア
        .LWORD          DUMMY                           ; 57            ; ソフトウェア
        .LWORD          DUMMY                           ; 58            ; ソフトウェア
        .LWORD          DUMMY                           ; 59            ; ソフトウェア
        .LWORD          DUMMY                           ; 60            ; ソフトウェア
        .LWORD          DUMMY                           ; 61            ; ソフトウェア
        .LWORD          DUMMY                           ; 62            ; ソフトウェア
        .LWORD          DUMMY                           ; 63            ; ソフトウェア
        
        


;===============================================================================
; 固定ベクタ領域
;===============================================================================
        .SECTION        FIXED_VECTOR, ROMDATA
        .ORG            FIXED_VECTOR_TOP
        .ADDR           DUMMY                   ; 未定義命令
        .BYTE           IDCODE_0                ; IDコード０番
        .ADDR           DUMMY                   ; オーバーフロー命令
        .BYTE           IDCODE_1                ; IDコード１番
        .LWORD          DUMMY                   ; BRK命令
        .ADDR           DUMMY                   ; アドレス一致
        .BYTE           IDCODE_2                ; IDコード２番
        .ADDR           DUMMY                   ; シングルステップ(通常は使用しない)
        .BYTE           IDCODE_3                ; IDコード３番
        .ADDR           DUMMY                   ; ウォッチドッグタイマ、発振停止検出、電圧監視１・２
        .BYTE           IDCODE_4                ; IDコード４番
        .ADDR           DUMMY                   ; アドレスブレーク(通常は使用しない)
        .BYTE           IDCODE_5                ; IDコード５番
        .ADDR           DUMMY                   ; 予約
        .BYTE           IDCODE_6                ; IDコード６番
        .ADDR           RESET                   ; リセット
        .BYTE           ROM_PROTECT             ; ROMプロテクトコード




;===============================================================================
; プログラム終端
;===============================================================================
        .END